<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc/service_config/service_config.proto

namespace Grpc\Service_config\ServiceConfig;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * If a RetryThrottlingPolicy is provided, gRPC will automatically throttle
 * retry attempts and hedged RPCs when the client's ratio of failures to
 * successes exceeds a threshold.
 * For each server name, the gRPC client will maintain a token_count which is
 * initially set to max_tokens. Every outgoing RPC (regardless of service or
 * method invoked) will change token_count as follows:
 *   - Every failed RPC will decrement the token_count by 1.
 *   - Every successful RPC will increment the token_count by token_ratio.
 * If token_count is less than or equal to max_tokens / 2, then RPCs will not
 * be retried and hedged RPCs will not be sent.
 *
 * Generated from protobuf message <code>grpc.service_config.ServiceConfig.RetryThrottlingPolicy</code>
 */
class RetryThrottlingPolicy extends \Google\Protobuf\Internal\Message
{
    /**
     * The number of tokens starts at max_tokens. The token_count will always be
     * between 0 and max_tokens.
     * This field is required and must be greater than zero.
     *
     * Generated from protobuf field <code>uint32 max_tokens = 1;</code>
     */
    protected $max_tokens = 0;
    /**
     * The amount of tokens to add on each successful RPC. Typically this will
     * be some number between 0 and 1, e.g., 0.1.
     * This field is required and must be greater than zero. Up to 3 decimal
     * places are supported.
     *
     * Generated from protobuf field <code>float token_ratio = 2;</code>
     */
    protected $token_ratio = 0.0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_tokens
     *           The number of tokens starts at max_tokens. The token_count will always be
     *           between 0 and max_tokens.
     *           This field is required and must be greater than zero.
     *     @type float $token_ratio
     *           The amount of tokens to add on each successful RPC. Typically this will
     *           be some number between 0 and 1, e.g., 0.1.
     *           This field is required and must be greater than zero. Up to 3 decimal
     *           places are supported.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Grpc\ServiceConfig\ServiceConfig::initOnce();
        parent::__construct($data);
    }

    /**
     * The number of tokens starts at max_tokens. The token_count will always be
     * between 0 and max_tokens.
     * This field is required and must be greater than zero.
     *
     * Generated from protobuf field <code>uint32 max_tokens = 1;</code>
     * @return int
     */
    public function getMaxTokens()
    {
        return $this->max_tokens;
    }

    /**
     * The number of tokens starts at max_tokens. The token_count will always be
     * between 0 and max_tokens.
     * This field is required and must be greater than zero.
     *
     * Generated from protobuf field <code>uint32 max_tokens = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxTokens($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_tokens = $var;

        return $this;
    }

    /**
     * The amount of tokens to add on each successful RPC. Typically this will
     * be some number between 0 and 1, e.g., 0.1.
     * This field is required and must be greater than zero. Up to 3 decimal
     * places are supported.
     *
     * Generated from protobuf field <code>float token_ratio = 2;</code>
     * @return float
     */
    public function getTokenRatio()
    {
        return $this->token_ratio;
    }

    /**
     * The amount of tokens to add on each successful RPC. Typically this will
     * be some number between 0 and 1, e.g., 0.1.
     * This field is required and must be greater than zero. Up to 3 decimal
     * places are supported.
     *
     * Generated from protobuf field <code>float token_ratio = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setTokenRatio($var)
    {
        GPBUtil::checkFloat($var);
        $this->token_ratio = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(RetryThrottlingPolicy::class, \Grpc\Service_config\ServiceConfig_RetryThrottlingPolicy::class);

