<?php
/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * GENERATED CODE WARNING
 * Generated by gapic-generator-php from the file
 * https://github.com/googleapis/googleapis/blob/master/tests/Unit/ProtoTests/RequiredToOptionalParameters/asset.proto
 * Updates to the above are reflected here through a refresh process.
 */

namespace Testing\RequiredToOptionalParameters\Gapic;

use Google\ApiCore\ApiException;
use Google\ApiCore\CredentialsWrapper;

use Google\ApiCore\GapicClientTrait;
use Google\ApiCore\RequestParamsHeaderDescriptor;
use Google\ApiCore\RetrySettings;
use Google\ApiCore\Transport\TransportInterface;
use Google\ApiCore\ValidationException;
use Google\Auth\FetchAuthTokenInterface;
use Testing\RequiredToOptionalParameters\BatchGetAssetsHistoryRequest;
use Testing\RequiredToOptionalParameters\BatchGetAssetsHistoryResponse;

/**
 * Service Description: Asset service definition.
 *
 * This class provides the ability to make remote calls to the backing service through method
 * calls that map to API methods. Sample code to get started:
 *
 * ```
 * $assetServiceClient = new AssetServiceClient();
 * try {
 *     $parent = 'parent';
 *     $contentType = 'content_type';
 *     $readTimeWindow = 'read_time_window';
 *     $response = $assetServiceClient->batchGetAssetsHistory($parent, $contentType, $readTimeWindow);
 * } finally {
 *     $assetServiceClient->close();
 * }
 * ```
 */
class AssetServiceGapicClient
{
    use GapicClientTrait;

    /**
     * The name of the service.
     */
    const SERVICE_NAME = 'google.cloud.asset.v1.AssetService';

    /**
     * The default address of the service.
     */
    const SERVICE_ADDRESS = 'cloudasset.googleapis.com';

    /**
     * The default port of the service.
     */
    const DEFAULT_SERVICE_PORT = 443;

    /**
     * The name of the code generator, to be included in the agent header.
     */
    const CODEGEN_NAME = 'gapic';

    /**
     * The default scopes required by the service.
     */
    public static $serviceScopes = [
        'https://www.googleapis.com/auth/cloud-platform',
    ];

    private static function getClientDefaults()
    {
        return [
            'serviceName' => self::SERVICE_NAME,
            'serviceAddress' => self::SERVICE_ADDRESS . ':' . self::DEFAULT_SERVICE_PORT,
            'clientConfig' => __DIR__ . '/../resources/asset_service_client_config.json',
            'descriptorsConfigPath' => __DIR__ . '/../resources/asset_service_descriptor_config.php',
            'gcpApiConfigPath' => __DIR__ . '/../resources/asset_service_grpc_config.json',
            'credentialsConfig' => [
                'defaultScopes' => self::$serviceScopes,
            ],
            'transportConfig' => [
                'rest' => [
                    'restClientConfigPath' => __DIR__ . '/../resources/asset_service_rest_client_config.php',
                ],
            ],
        ];
    }

    /**
     * Constructor.
     *
     * @param array $options {
     *     Optional. Options for configuring the service API wrapper.
     *
     *     @type string $serviceAddress
     *           The address of the API remote host. May optionally include the port, formatted
     *           as "<uri>:<port>". Default 'cloudasset.googleapis.com:443'.
     *     @type string|array|FetchAuthTokenInterface|CredentialsWrapper $credentials
     *           The credentials to be used by the client to authorize API calls. This option
     *           accepts either a path to a credentials file, or a decoded credentials file as a
     *           PHP array.
     *           *Advanced usage*: In addition, this option can also accept a pre-constructed
     *           {@see \Google\Auth\FetchAuthTokenInterface} object or
     *           {@see \Google\ApiCore\CredentialsWrapper} object. Note that when one of these
     *           objects are provided, any settings in $credentialsConfig will be ignored.
     *     @type array $credentialsConfig
     *           Options used to configure credentials, including auth token caching, for the
     *           client. For a full list of supporting configuration options, see
     *           {@see \Google\ApiCore\CredentialsWrapper::build()} .
     *     @type bool $disableRetries
     *           Determines whether or not retries defined by the client configuration should be
     *           disabled. Defaults to `false`.
     *     @type string|array $clientConfig
     *           Client method configuration, including retry settings. This option can be either
     *           a path to a JSON file, or a PHP array containing the decoded JSON data. By
     *           default this settings points to the default client config file, which is
     *           provided in the resources folder.
     *     @type string|TransportInterface $transport
     *           The transport used for executing network requests. May be either the string
     *           `rest` or `grpc`. Defaults to `grpc` if gRPC support is detected on the system.
     *           *Advanced usage*: Additionally, it is possible to pass in an already
     *           instantiated {@see \Google\ApiCore\Transport\TransportInterface} object. Note
     *           that when this object is provided, any settings in $transportConfig, and any
     *           $serviceAddress setting, will be ignored.
     *     @type array $transportConfig
     *           Configuration options that will be used to construct the transport. Options for
     *           each supported transport type should be passed in a key for that transport. For
     *           example:
     *           $transportConfig = [
     *               'grpc' => [...],
     *               'rest' => [...],
     *           ];
     *           See the {@see \Google\ApiCore\Transport\GrpcTransport::build()} and
     *           {@see \Google\ApiCore\Transport\RestTransport::build()} methods for the
     *           supported options.
     *     @type callable $clientCertSource
     *           A callable which returns the client cert as a string. This can be used to
     *           provide a certificate and private key to the transport layer for mTLS.
     * }
     *
     * @throws ValidationException
     */
    public function __construct(array $options = [])
    {
        $clientOptions = $this->buildClientOptions($options);
        $this->setClientOptions($clientOptions);
    }

    /**
     * Batch gets the update history of assets that overlap a time window.
     * For IAM_POLICY content, this API outputs history when the asset and its
     * attached IAM POLICY both exist. This can create gaps in the output history.
     * Otherwise, this API outputs history with asset in both non-delete or
     * deleted status.
     * If a specified asset does not exist, this API returns an INVALID_ARGUMENT
     * error.
     *
     * Sample code:
     * ```
     * $assetServiceClient = new AssetServiceClient();
     * try {
     *     $parent = 'parent';
     *     $contentType = 'content_type';
     *     $readTimeWindow = 'read_time_window';
     *     $response = $assetServiceClient->batchGetAssetsHistory($parent, $contentType, $readTimeWindow);
     * } finally {
     *     $assetServiceClient->close();
     * }
     * ```
     *
     * @param string $parent         Required. The relative name of the root asset. It can only be an
     *                               organization number (such as "organizations/123"), a project ID (such as
     *                               "projects/my-project-id")", or a project number (such as "projects/12345").
     * @param string $contentType    Optional. The content type.
     * @param string $readTimeWindow Optional. The time window for the asset history. Both start_time and
     *                               end_time are optional and if set, it must be after the current time minus
     *                               35 days. If end_time is not set, it is default to current timestamp.
     *                               If start_time is not set, the snapshot of the assets at end_time will be
     *                               returned. The returned results contain all temporal assets whose time
     *                               window overlap with read_time_window.
     * @param array  $optionalArgs   {
     *     Optional.
     *
     *     @type string[] $assetNames
     *           A list of the full names of the assets.
     *           See: https://cloud.google.com/asset-inventory/docs/resource-name-format
     *           Example:
     *
     *           `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`.
     *
     *           The request becomes a no-op if the asset name list is empty, and the max
     *           size of the asset name list is 100 in one request.
     *     @type string[] $relationshipTypes
     *           Optional. A list of relationship types to output, for example:
     *           `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if
     *           content_type=RELATIONSHIP.
     *           * If specified:
     *           it outputs specified relationships' history on the [asset_names]. It
     *           returns an error if any of the [relationship_types] doesn't belong to the
     *           supported relationship types of the [asset_names] or if any of the
     *           [asset_names]'s types doesn't belong to the source types of the
     *           [relationship_types].
     *           * Otherwise:
     *           it outputs the supported relationships' history on the [asset_names] or
     *           returns an error if any of the [asset_names]'s types has no relationship
     *           support.
     *           See [Introduction to Cloud Asset
     *           Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all
     *           supported asset types and relationship types.
     *     @type RetrySettings|array $retrySettings
     *           Retry settings to use for this call. Can be a
     *           {@see Google\ApiCore\RetrySettings} object, or an associative array of retry
     *           settings parameters. See the documentation on
     *           {@see Google\ApiCore\RetrySettings} for example usage.
     * }
     *
     * @return \Testing\RequiredToOptionalParameters\BatchGetAssetsHistoryResponse
     *
     * @throws ApiException if the remote call fails
     */
    public function batchGetAssetsHistory($parent, $contentType, $readTimeWindow, array $optionalArgs = [])
    {
        $request = new BatchGetAssetsHistoryRequest();
        $requestParamHeaders = [];
        $request->setParent($parent);
        $request->setContentType($contentType);
        $request->setReadTimeWindow($readTimeWindow);
        $requestParamHeaders['parent'] = $parent;
        if (isset($optionalArgs['assetNames'])) {
            $request->setAssetNames($optionalArgs['assetNames']);
        }

        if (isset($optionalArgs['relationshipTypes'])) {
            $request->setRelationshipTypes($optionalArgs['relationshipTypes']);
        }

        $requestParams = new RequestParamsHeaderDescriptor($requestParamHeaders);
        $optionalArgs['headers'] = isset($optionalArgs['headers']) ? array_merge($requestParams->getHeader(), $optionalArgs['headers']) : $requestParams->getHeader();
        return $this->startCall('BatchGetAssetsHistory', BatchGetAssetsHistoryResponse::class, $optionalArgs, $request)->wait();
    }
}
