syntax = "proto3";

package testing.resourcenames;

option php_namespace = "Testing\\ResourceNames";

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/resource.proto";
import "google/api/field_behavior.proto";

service ResourceNames {
  option (google.api.default_host) = "resourcenames.example.com";

  rpc SinglePatternMethod(SinglePatternRequest) returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:singlePatternMethod"
      body: "*"
    };
  }

  rpc MultiPatternMethod(MultiPatternRequest) returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:multiPatternMethod"
      body: "*"
    };
  }

  rpc WildcardMethod(WildcardPatternRequest) returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:wildcardMethod"
      body: "*"
    };
  }

  rpc WildcardMultiMethod(WildcardMultiPatternRequest)
      returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:wildcardMultiMethod"
      body: "*"
    };
  }

  rpc WildcardReferenceMethod(WildcardReferenceRequest)
      returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:wildcardReference"
      body: "*"
    };
  }

  rpc WildcardChildReferenceMethod(WildcardChildReferenceRequest)
      returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:wildcardChildReference"
      body: "*"
    };
  }

  rpc FileLevelTypeRefMethod(FileLevelTypeRefRequest)
      returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:fileLevelTypeRefMethod"
      body: "*"
    };
  }

  rpc FileLevelChildTypeRefMethod(FileLevelChildTypeRefRequest)
      returns (PlaceholderResponse) {
    option (google.api.http) = {
      post: "/path:fileLevelChildTypeRefMethod"
      body: "*"
    };
  }
}

message SinglePatternRequest {
  option (google.api.resource) = {
    type: "resourcenames.example.com/SinglePattern"
    pattern: "items1/{item1_id}/items2/{item2_id}"
    name_field: "real_name"
  };
  // Test non-standard field name.
  string real_name = 1;
}

message MultiPatternRequest {
  option (google.api.resource) = {
    type: "resourcenames.example.com/MultiPattern"
    pattern: "items1/{item1_id}/items2/{item2_id}"  // Test duplicate pattern,
                                                    // also in SinglePattern
    pattern: "items3/{item3_id}"
    pattern: "items4/{item4_id}/items5/{item5a_id}_{item5b_id}-{item5c_id}.{item5d_id}~{item5e_id}/items6/{item6_id}"  // Test non-/ separators
  };
  string name = 1;
}

message WildcardPatternRequest {
  option (google.api.resource) = {
    type: "resourcenames.example.com/WildcardPattern"
    pattern: "*"  // Test single wildcard pattern
  };
  string name = 1;
}

message WildcardReferenceRequest {
  string name = 1 [(google.api.resource_reference).type = "*"];
}

message WildcardChildReferenceRequest {
  string parent = 1 [(google.api.resource_reference).child_type = "*"];
}

message WildcardMultiPatternRequest {
  option (google.api.resource) = {
    type: "resourcenames.example.com/WildcardMultiPattern"
    pattern: "items1/{item1_id}"
    pattern: "*"  // Test wildcard pattern among non-wildcard patterns
    pattern: "items2/{item2_id}"
  };
  string name = 1;
}

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/FileResDef",
  pattern: "items1/{item1_id}"
};

message FileLevelTypeRefRequest {
  string file_name = 1 [(google.api.resource_reference).type =
                            "resourcenames.example.com/FileResDef"];
}

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/Folder",
  pattern: "folders/{folder_id}"
};

// Test when there are multiple possible parent resources.
// PHP generator will select just the first one, so this one will be ignored.
option (google.api.resource_definition) = {
  type: "resourcenames.example.com/FolderUnused",
  pattern: "folders/{folder_id}"
};

// Test behaviour on single-pattern child-type reference.
option (google.api.resource_definition) = {
  type: "resourcenames.example.com/File",
  pattern: "folders/{folder_id}/files/{file_id}"
};

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/Folder1"
  pattern: "folders1/{folder1_id}"
};

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/Folder2"
  pattern: "folders2/{folder2_id}"
};

// Test behaviour on multi-pattern child-type reference.
option (google.api.resource_definition) = {
  type: "resourcenames.example.com/FileMulti"
  pattern: "folders1/{folder1_id}/files/{file_id}"
  pattern: "folders2/{folder2_id}/files/{file_id}"
};

// Test behaviour on multi-pattern child-type reference with the (obsolete)
// history. And use opposite order to FileMulti patterns.
option (google.api.resource_definition) = {
  type: "resourcenames.example.com/FileMultiHistory"
  pattern: "folders2/{folder2_id}/files/{file_id}"
  pattern: "folders1/{folder1_id}/files/{file_id}"
  history: ORIGINALLY_SINGLE_PATTERN
};

// Test behaviour on multi-pattern child-type reference with wildcard.
// No parent lookups are performed.
option (google.api.resource_definition) = {
  type: "resourcenames.example.com/FileMultiWildcard"
  pattern: "folders3/{folder3_id}/files/{file_id}"
  pattern: "*"
};

message Order1Request {
  option (google.api.resource) = {
    type: "resourcenames.example.com/Order1"
    pattern: "orders1/{order1_id}"
  };
  string name = 1;
}

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/Order2"
  pattern: "orders2/{order2_id}"
};

message Order3Request {
  option (google.api.resource) = {
    type: "resourcenames.example.com/Order3"
    pattern: "orders3/{order3_id}"
  };
  string name = 1;
}

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/OrderTest1"
  pattern: "orders1/{order1_id}/items/{item_id}"
  pattern: "orders2/{order2_id}/items/{item_id}"
};

option (google.api.resource_definition) = {
  type: "resourcenames.example.com/OrderTest2"
  pattern: "orders2/{order2_id}/items/{item_id}"
  pattern: "orders3/{order3_id}/items/{item_id}"
};

message FileLevelChildTypeRefRequest {
  string folder_name = 1 [(google.api.resource_reference).child_type =
                              "resourcenames.example.com/File"];
  string folder_multi_name = 2 [(google.api.resource_reference).child_type =
                                    "resourcenames.example.com/FileMulti"];
  string folder_multi_wildcard_name = 3
      [(google.api.resource_reference).child_type =
           "resourcenames.example.com/FileMultiWildcard"];
  string req_folder_name = 4 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).child_type =
        "resourcenames.example.com/File"
  ];
  string req_folder_multi_name = 5 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).child_type =
        "resourcenames.example.com/FileMulti"
  ];
  string req_folder_multi_name_history = 6 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).child_type =
        "resourcenames.example.com/FileMultiHistory"
  ];
  string req_order_test1 = 7 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).child_type =
        "resourcenames.example.com/OrderTest1"
  ];
  string req_order_test2 = 8 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference).child_type =
        "resourcenames.example.com/OrderTest2"
  ];
}

// This isn't referenced anywhere, so should be ignored.
option (google.api.resource_definition) = {
  type: "resourcenames.example.com/IgnoreMe",
  pattern: "items_to_ignore/{item_to_ignore_id}"
};

message PlaceholderResponse {}
