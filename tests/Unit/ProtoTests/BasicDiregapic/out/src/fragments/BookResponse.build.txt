    /**
     * @param string $name           The resource name of the book.
     *                               BookResponse names have the form `bookShelves/{shelf_id}/books/{book_id}`.
     *                               Message field comment may include special characters: <>&"`'&#64;. Please see
     *                               {@see LibraryClient::bookName()} for help formatting this field.
     * @param string $author         The name of the book author.
     * @param string $title          The title of the book.
     * @param int    $rating         For testing enums.
     * @param mixed  $optionalFields {
     *     Optional.
     *
     *     @type bool $read
     *           Value indicating whether the book has been read.
     *     @type string $reader
     *     @type \Google\Protobuf\Any $anyValue
     *           For testing all well-known types.
     *     @type \Google\Protobuf\Struct $structValue
     *     @type \Google\Protobuf\Value $valueValue
     *     @type \Google\Protobuf\ListValue $listValueValue
     *     @type array $mapListValueValue
     *     @type \Google\Protobuf\Timestamp $timeValue
     *     @type \Google\Protobuf\Duration $durationValue
     *     @type \Google\Protobuf\FieldMask $fieldMaskValue
     *     @type \Google\Protobuf\Int32Value $int32Value
     *     @type \Google\Protobuf\UInt32Value $uint32Value
     *     @type \Google\Protobuf\Int64Value $int64Value
     *     @type \Google\Protobuf\UInt64Value $uint64Value
     *     @type \Google\Protobuf\FloatValue $floatValue
     *     @type \Google\Protobuf\DoubleValue $doubleValue
     *     @type \Google\Protobuf\StringValue $stringValue
     *     @type \Google\Protobuf\BoolValue $boolValue
     *     @type \Google\Protobuf\BytesValue $bytesValue
     *     @type array $mapStringValue
     *           Test doc generation of lists:
     *
     *           +   Here is a sentence about the first element of the list that continues
     *           into a second line.
     *           +   The second element of the list.
     *           +   Another element of the list where the indentation isn't consistent
     *           after a blank space.
     *
     *           The second paragraph of the list
     *           that doesn't have a hanging indent.
     *     @type array $mapMessageValue
     *     @type \Testing\BasicDiregapic\Used $resource
     *           Tests Python doc generation: should generate a dummy file for shared_type
     *           resource, but *not* its import, other_shared_type
     *     @type array $mapBoolKey
     *           For testing accessing map fields in samplegen
     * }
     *
     * @return \Testing\BasicDiregapic\BookResponse
     */
    public static function build(string $name, string $author, string $title, int $rating, array $optionalFields = []): self
    {
        return (new self($optionalFields))
            ->setName($name)
            ->setAuthor($author)
            ->setTitle($title)
            ->setRating($rating);
    }
