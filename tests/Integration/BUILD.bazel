load(
    "@com_google_googleapis_imports//:imports.bzl",
    "proto_library_with_info",
    php_gapic_assembly_pkg = "php_gapic_assembly_pkg2",
    php_gapic_library = "php_gapic_library2",
    php_grpc_library = "php_grpc_library2",
    php_proto_library = "php_proto_library2",
)
load("//:rules_php_test/integration_test.bzl", "php_golden_update", "php_integration_test")
load("@rules_proto//proto:defs.bzl", "proto_library")

####################################################
# Integration Test Rules
####################################################
INTEGRATION_TEST_LIBRARIES = [
    "asset",  # Basic case.
    "asset_rest",  # REGAPIC.
    "container",  # RPCs with more than one routing header.
    "dataproc",  # RPCs with additional_bindings in the HTTP annotation.
    "functions",  # RPCs with HTTP variables that fall into the edge case.
    "kms",  # Mixins.
    "iam",  # Standalone service that's in the mixin allowlist.
    "logging",  # Singleton resource names.
    "redis",  # sample_code field in gapic.yaml.
    "retail",  # ALpha.
    "speech",  # sample_code field in gapic.yaml.
    "securitycenter",  # Exercises pathTemplateMap.
    "talent",  # Beta; path template and duplicate name template properties.
    "videointelligence",  # sample_code field in gapic.yaml.
]

[php_integration_test(
    name = lib_name,
    data = ["//tests/Integration/goldens/%s:goldens_files" % lib_name],
    target = "%s_php_gapic" % lib_name,
) for lib_name in INTEGRATION_TEST_LIBRARIES]

[php_golden_update(
    name = "%s_update" % lib_name,
    data = ["//tests/Integration/goldens/%s:goldens_files" % lib_name],
    target = "%s_php_gapic" % lib_name,
) for lib_name in INTEGRATION_TEST_LIBRARIES]

####################################################
# API Library Rules
####################################################
# proto_library, grpc_library, and gapic_library rule redefinitions will eventually go away
# once more APIs in googleapis have been migrated to the microgenerator.

# Asset API - basic case.
php_proto_library(
    name = "asset_php_proto",
    deps = ["@com_google_googleapis//google/cloud/asset/v1:asset_proto"],
)

php_grpc_library(
    name = "asset_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/asset/v1:asset_proto"],
    deps = [":asset_php_proto"],
)

php_gapic_library(
    name = "asset_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/asset/v1:asset_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/asset/v1:cloudasset_grpc_service_config.json",
    deps = [
        ":asset_php_grpc",
        ":asset_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-asset-v1-php",
    deps = [
        ":asset_php_gapic",
        ":asset_php_grpc",
        ":asset_php_proto",
    ],
)

# Asset, REGAPIC version
php_gapic_library(
    name = "asset_rest_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/asset/v1:asset_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/asset/v1:cloudasset_grpc_service_config.json",
    transport = "rest",
    deps = [
        ":asset_rest_php_grpc",
        ":asset_rest_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-asset-rest-v1-php",
    deps = [
        ":asset_php_grpc",
        ":asset_php_proto",
        ":asset_rest_php_gapic",
    ],
)

# Container - RPCs with more than one routing header.
php_proto_library(
    name = "container_php_proto",
    deps = ["@com_google_googleapis//google/container/v1:container_proto"],
)

php_grpc_library(
    name = "container_php_grpc",
    srcs = ["@com_google_googleapis//google/container/v1:container_proto"],
    deps = [":container_php_proto"],
)

php_gapic_library(
    name = "container_php_gapic",
    srcs = ["@com_google_googleapis//google/container/v1:container_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/container/v1:container_grpc_service_config.json",
    deps = [
        ":container_php_grpc",
        ":container_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-container-v1-php",
    deps = [
        ":container_php_gapic",
        ":container_php_grpc",
        ":container_php_proto",
    ],
)

# Dataproc - RPCs with additional_bindings in the HTTP annotations.
php_proto_library(
    name = "dataproc_php_proto",
    deps = ["@com_google_googleapis//google/cloud/dataproc/v1:dataproc_proto"],
)

php_grpc_library(
    name = "dataproc_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/dataproc/v1:dataproc_proto"],
    deps = [":dataproc_php_proto"],
)

php_gapic_library(
    name = "dataproc_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/dataproc/v1:dataproc_proto_with_info"],
    gapic_yaml = "@com_google_googleapis//google/cloud/dataproc/v1:dataproc_gapic.yaml",
    grpc_service_config = "@com_google_googleapis//google/cloud/dataproc/v1:dataproc_grpc_service_config.json",
    service_yaml = "@com_google_googleapis//google/cloud/dataproc/v1:dataproc_v1.yaml",
    deps = [
        ":dataproc_php_grpc",
        ":dataproc_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-dataproc-v1-php",
    deps = [
        ":dataproc_php_gapic",
        ":dataproc_php_grpc",
        ":dataproc_php_proto",
    ],
)

# Functions.
php_proto_library(
    name = "functions_php_proto",
    deps = ["@com_google_googleapis//google/cloud/functions/v1:functions_proto"],
)

php_grpc_library(
    name = "functions_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/functions/v1:functions_proto"],
    deps = [":functions_php_proto"],
)

php_gapic_library(
    name = "functions_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/functions/v1:functions_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/functions/v1:functions_grpc_service_config.json",
    deps = [
        ":functions_php_grpc",
        ":functions_php_proto",
    ],
)

# Open Source Packages
php_gapic_assembly_pkg(
    name = "google-cloud-functions-v1-php",
    deps = [
        ":functions_php_gapic",
        ":functions_php_grpc",
        ":functions_php_proto",
    ],
)

# Logging - singleton resource names.
php_proto_library(
    name = "logging_php_proto",
    deps = ["@com_google_googleapis//google/logging/v2:logging_proto"],
)

php_grpc_library(
    name = "logging_php_grpc",
    srcs = ["@com_google_googleapis//google/logging/v2:logging_proto"],
    deps = [":logging_php_proto"],
)

php_gapic_library(
    name = "logging_php_gapic",
    srcs = ["@com_google_googleapis//google/logging/v2:logging_proto_with_info"],
    # For batching.
    gapic_yaml = "@com_google_googleapis//google/logging/v2:logging_gapic.yaml",
    grpc_service_config = "@com_google_googleapis//google/logging/v2:logging_grpc_service_config.json",
    deps = [
        ":logging_php_grpc",
        ":logging_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-logging-v1-php",
    deps = [
        ":logging_php_gapic",
        ":logging_php_grpc",
        ":logging_php_proto",
    ],
)

# Securitycenter.
php_proto_library(
    name = "securitycenter_php_proto",
    deps = ["@com_google_googleapis//google/cloud/securitycenter/v1:securitycenter_proto"],
)

php_grpc_library(
    name = "securitycenter_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/securitycenter/v1:securitycenter_proto"],
    deps = [":securitycenter_php_proto"],
)

php_gapic_library(
    name = "securitycenter_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/securitycenter/v1:securitycenter_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/securitycenter/v1:securitycenter_grpc_service_config.json",
    service_yaml = "@com_google_googleapis//google/cloud/securitycenter/v1:securitycenter_v1.yaml",
    deps = [
        ":securitycenter_php_grpc",
        ":securitycenter_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-securitycenter-v1beta1-php",
    deps = [
        ":securitycenter_php_gapic",
        ":securitycenter_php_grpc",
        ":securitycenter_php_proto",
    ],
)

# Speech - sample_code.
php_proto_library(
    name = "speech_php_proto",
    deps = ["@com_google_googleapis//google/cloud/speech/v1:speech_proto"],
)

php_grpc_library(
    name = "speech_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/speech/v1:speech_proto"],
    deps = [":speech_php_proto"],
)

php_gapic_library(
    name = "speech_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/speech/v1:speech_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/speech/v1:speech_grpc_service_config.json",
    service_yaml = "@com_google_googleapis//google/cloud/speech/v1:speech_v1.yaml",
    deps = [
        ":speech_php_grpc",
        ":speech_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-speech-v1-php",
    deps = [
        ":speech_php_gapic",
        ":speech_php_grpc",
        ":speech_php_proto",
    ],
)

# Redis - sample code.
php_proto_library(
    name = "redis_php_proto",
    deps = ["@com_google_googleapis//google/cloud/redis/v1:redis_proto"],
)

php_grpc_library(
    name = "redis_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/redis/v1:redis_proto"],
    deps = [":redis_php_proto"],
)

php_gapic_library(
    name = "redis_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/redis/v1:redis_proto_with_info"],
    gapic_yaml = "@com_google_googleapis//google/cloud/redis/v1:redis_gapic.yaml",
    grpc_service_config = "@com_google_googleapis//google/cloud/redis/v1:redis_grpc_service_config.json",
    service_yaml = "@com_google_googleapis//google/cloud/redis/v1:redis_v1.yaml",
    deps = [
        ":redis_php_grpc",
        ":redis_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-redis-v1-php",
    deps = [
        ":redis_php_gapic",
        ":redis_php_grpc",
        ":redis_php_proto",
    ],
)

# Retail - Alpha.
php_proto_library(
    name = "retail_php_proto",
    deps = ["@com_google_googleapis//google/cloud/retail/v2alpha:retail_proto"],
)

php_grpc_library(
    name = "retail_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/retail/v2alpha:retail_proto"],
    deps = [":retail_php_proto"],
)

php_gapic_library(
    name = "retail_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/retail/v2alpha:retail_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/retail/v2alpha:retail_grpc_service_config.json",
    service_yaml = "@com_google_googleapis//google/cloud/retail/v2alpha:retail_v2alpha.yaml",
    deps = [
        ":retail_php_grpc",
        ":retail_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-retail-v2alpha-php",
    deps = [
        ":retail_php_gapic",
        ":retail_php_grpc",
        ":retail_php_proto",
    ],
)

# Video intelligence - sample code.
php_proto_library(
    name = "videointelligence_php_proto",
    deps = ["@com_google_googleapis//google/cloud/videointelligence/v1:videointelligence_proto"],
)

php_grpc_library(
    name = "videointelligence_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/videointelligence/v1:videointelligence_proto"],
    deps = [":videointelligence_php_proto"],
)

php_gapic_library(
    name = "videointelligence_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/videointelligence/v1:videointelligence_proto_with_info"],
    # Do not change this to the videointelligence_gapic.yaml, see tracking bug.
    gapic_yaml = "@com_google_googleapis//google/cloud/videointelligence/v1:videointelligence_gapic.legacy.yaml",
    service_yaml = "@com_google_googleapis//google/cloud/videointelligence/v1:videointelligence_v1.yaml",
    deps = [
        ":videointelligence_php_grpc",
        ":videointelligence_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-videointelligence-v1-php",
    deps = [
        ":videointelligence_php_gapic",
        ":videointelligence_php_grpc",
        ":videointelligence_php_proto",
    ],
)

# KMS - mixins.
proto_library(
    name = "kms_proto",
    srcs = [
        "apis/kms/v1/resources.proto",
        "apis/kms/v1/service.proto",
    ],
    deps = [
        "@com_google_googleapis//google/api:annotations_proto",
        "@com_google_googleapis//google/api:client_proto",
        "@com_google_googleapis//google/api:field_behavior_proto",
        "@com_google_googleapis//google/api:resource_proto",
        "@com_google_googleapis//google/cloud/location:location_proto",
        "@com_google_googleapis//google/iam/v1:iam_policy_proto",
        "@com_google_googleapis//google/iam/v1:policy_proto",
        "@com_google_protobuf//:duration_proto",
        "@com_google_protobuf//:field_mask_proto",
        "@com_google_protobuf//:struct_proto",
        "@com_google_protobuf//:timestamp_proto",
        "@com_google_protobuf//:wrappers_proto",
    ],
)

proto_library_with_info(
    name = "kms_proto_with_info",
    deps = [
        ":kms_proto",
        "@com_google_googleapis//google/cloud:common_resources_proto",
        "@com_google_googleapis//google/cloud/location:location_proto",
        "@com_google_googleapis//google/iam/v1:iam_policy_proto",
        "@com_google_googleapis//google/iam/v1:policy_proto",
    ],
)

php_proto_library(
    name = "kms_php_proto",
    deps = [":kms_proto"],
)

php_grpc_library(
    name = "kms_php_grpc",
    srcs = [":kms_proto"],
    deps = [":kms_php_proto"],
)

php_gapic_library(
    name = "kms_php_gapic",
    srcs = [":kms_proto_with_info"],
    grpc_service_config = "apis/kms/v1/cloudkms_grpc_service_config.json",
    # For the IAM mixin.
    service_yaml = "apis/kms/v1/cloudkms_test_mixins_v1.yaml",
    deps = [
        ":kms_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-kms-v1-php",
    deps = [
        ":kms_php_gapic",
        ":kms_php_grpc",
        ":kms_php_proto",
    ],
)

# IAM - standalone mixed-in proto.
php_proto_library(
    name = "iam_php_proto",
    deps = [
        "@com_google_googleapis//google/iam/v1:iam_policy_proto",
        "@com_google_googleapis//google/iam/v1:options_proto",
        "@com_google_googleapis//google/iam/v1:policy_proto",
    ],
)

php_grpc_library(
    name = "iam_php_grpc",
    srcs = ["@com_google_googleapis//google/iam/v1:iam_policy_proto"],
    deps = [":iam_php_proto"],
)

php_gapic_library(
    name = "iam_php_gapic",
    srcs = ["@com_google_googleapis//google/iam/v1:iam_proto_with_info"],
    gapic_yaml = "apis/iam/v1/iam_gapic.yaml",
    service_yaml = "apis/iam/v1/iam_api.yaml",
    deps = [
        ":iam_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-iam-v1-php",
    deps = [
        ":iam_php_gapic",
        ":iam_php_grpc",
        ":iam_php_proto",
    ],
)

# Talent.
php_proto_library(
    name = "talent_php_proto",
    deps = ["@com_google_googleapis//google/cloud/talent/v4beta1:talent_proto"],
)

php_grpc_library(
    name = "talent_php_grpc",
    srcs = ["@com_google_googleapis//google/cloud/talent/v4beta1:talent_proto"],
    deps = [":talent_php_proto"],
)

php_gapic_library(
    name = "talent_php_gapic",
    srcs = ["@com_google_googleapis//google/cloud/talent/v4beta1:talent_proto_with_info"],
    grpc_service_config = "@com_google_googleapis//google/cloud/talent/v4beta1:talent_grpc_service_config.json",
    service_yaml = "@com_google_googleapis//google/cloud/talent:talent_v4beta1.yaml",
    deps = [
        ":talent_php_grpc",
        ":talent_php_proto",
    ],
)

php_gapic_assembly_pkg(
    name = "google-cloud-talent-v4beta1-php",
    deps = [
        ":talent_php_gapic",
        ":talent_php_grpc",
        ":talent_php_proto",
    ],
)
