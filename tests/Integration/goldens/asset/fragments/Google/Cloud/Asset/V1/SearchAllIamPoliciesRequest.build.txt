
    /**
     * @param string $scope Required. A scope can be a project, a folder, or an organization. The search is
     *                      limited to the IAM policies within the `scope`. The caller must be granted
     *                      the
     *                      [`cloudasset.assets.searchAllIamPolicies`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions)
     *                      permission on the desired scope.
     *
     *                      The allowed values are:
     *
     *                      * projects/{PROJECT_ID} (e.g., "projects/foo-bar")
     *                      * projects/{PROJECT_NUMBER} (e.g., "projects/12345678")
     *                      * folders/{FOLDER_NUMBER} (e.g., "folders/1234567")
     *                      * organizations/{ORGANIZATION_NUMBER} (e.g., "organizations/123456")
     * @param string $query Optional. The query statement. See [how to construct a
     *                      query](https://cloud.google.com/asset-inventory/docs/searching-iam-policies#how_to_construct_a_query)
     *                      for more information. If not specified or empty, it will search all the
     *                      IAM policies within the specified `scope`. Note that the query string is
     *                      compared against each Cloud IAM policy binding, including its members,
     *                      roles, and Cloud IAM conditions. The returned Cloud IAM policies will only
     *                      contain the bindings that match your query. To learn more about the IAM
     *                      policy structure, see [IAM policy
     *                      doc](https://cloud.google.com/iam/docs/policies#structure).
     *
     *                      Examples:
     *
     *                      * `policy:amy&#64;gmail.com` to find IAM policy bindings that specify user
     *                      "amy&#64;gmail.com".
     *                      * `policy:roles/compute.admin` to find IAM policy bindings that specify
     *                      the Compute Admin role.
     *                      * `policy:comp*` to find IAM policy bindings that contain "comp" as a
     *                      prefix of any word in the binding.
     *                      * `policy.role.permissions:storage.buckets.update` to find IAM policy
     *                      bindings that specify a role containing "storage.buckets.update"
     *                      permission. Note that if callers don't have `iam.roles.get` access to a
     *                      role's included permissions, policy bindings that specify this role will
     *                      be dropped from the search results.
     *                      * `policy.role.permissions:upd*` to find IAM policy bindings that specify a
     *                      role containing "upd" as a prefix of any word in the role permission.
     *                      Note that if callers don't have `iam.roles.get` access to a role's
     *                      included permissions, policy bindings that specify this role will be
     *                      dropped from the search results.
     *                      * `resource:organizations/123456` to find IAM policy bindings
     *                      that are set on "organizations/123456".
     *                      * `resource=//cloudresourcemanager.googleapis.com/projects/myproject` to
     *                      find IAM policy bindings that are set on the project named "myproject".
     *                      * `Important` to find IAM policy bindings that contain "Important" as a
     *                      word in any of the searchable fields (except for the included
     *                      permissions).
     *                      * `resource:(instance1 OR instance2) policy:amy` to find
     *                      IAM policy bindings that are set on resources "instance1" or
     *                      "instance2" and also specify user "amy".
     *                      * `roles:roles/compute.admin` to find IAM policy bindings that specify the
     *                      Compute Admin role.
     *                      * `memberTypes:user` to find IAM policy bindings that contain the "user"
     *                      member type.
     *
     * @return \Google\Cloud\Asset\V1\SearchAllIamPoliciesRequest
     *
     * @experimental
     */
    public static function build(string $scope, string $query): self
    {
        return (new self())
            ->setScope($scope)
            ->setQuery($query);
    }