    /**
     * @param string $parent         Required. The resource name of the tenant under which the profile is created.
     *
     *                               The format is "projects/{project_id}/tenants/{tenant_id}". For example,
     *                               "projects/foo/tenants/bar". Please see
     *                               {@see ProfileServiceClient::tenantName()} for help formatting this field.
     * @param mixed  $optionalFields {
     *     Optional.
     *
     *     @type string $filter
     *           The filter string specifies the profiles to be enumerated.
     *
     *           Supported operator: =, AND
     *
     *           The field(s) eligible for filtering are:
     *
     *           * `externalId`
     *           * `groupId`
     *
     *           externalId and groupId cannot be specified at the same time. If both
     *           externalId and groupId are provided, the API will return a bad request
     *           error.
     *
     *           Sample Query:
     *
     *           * externalId = "externalId-1"
     *           * groupId = "groupId-1"
     *     @type string $pageToken
     *           The token that specifies the current offset (that is, starting result).
     *
     *           Please set the value to [ListProfilesResponse.next_page_token][google.cloud.talent.v4beta1.ListProfilesResponse.next_page_token] to
     *           continue the list.
     *     @type int $pageSize
     *           The maximum number of profiles to be returned, at most 100.
     *
     *           Default is 100 unless a positive number smaller than 100 is specified.
     *     @type \Google\Protobuf\FieldMask $readMask
     *           A field mask to specify the profile fields to be listed in response.
     *           All fields are listed if it is unset.
     *
     *           Valid values are:
     *
     *           * name
     * }
     *
     * @return \Google\Cloud\Talent\V4beta1\ListProfilesRequest
     */
    public static function build(string $parent, array $optionalFields = []): self
    {
        return (new self($optionalFields))
            ->setParent($parent);
    }
