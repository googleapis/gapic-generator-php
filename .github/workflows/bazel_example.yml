name: Bazel Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    container: gcr.io/gapic-images/googleapis:latest

    steps:
    - name: Install git on container
      run: |
        apt update
        apt install -y git
    - uses: bazel-contrib/setup-bazel@0.15.0
    #  with:
        # Avoid downloading Bazel every time.
        #bazelisk-cache: true
        # Store build cache per workflow.
        #disk-cache: ${{ github.workflow }}
        # Share repository cache between workflows.
        #repository-cache: true
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    # Forcefully delete Bazel and Bazelisk caches
    - name: Aggressive Bazel Cache Cleanup
      run: |
        echo "Attempting aggressive Bazel cache cleanup..."
        # Determine Bazel's output base (where it stores build artifacts)
        BAZEL_OUTPUT_BASE=$(bazelisk info output_base 2>/dev/null || true)
        if [ -n "$BAZEL_OUTPUT_BASE" ]; then
          echo "Deleting Bazel output base: $BAZEL_OUTPUT_BASE"
          rm -rf "$BAZEL_OUTPUT_BASE"
        else
          echo "Could not determine Bazel output base. It might not have been created yet, or Bazel is too stuck."
        fi

        # Delete Bazel's home directory cache
        echo "Deleting user's .bazel home directory cache..."
        rm -rf ~/.bazel || true # `|| true` to prevent failure if directory doesn't exist

        # Delete Bazelisk's local cache for downloaded Bazel versions
        echo "Deleting Bazelisk's cache..."
        rm -rf ~/.cache/bazelisk || true

        echo "Aggressive cleanup complete."
      shell: sh -e {0} # Explicitly specify shell for clarity
       # No env var needed for this step unless output_base path depends on it

    #- name: Bazel File Cache Setup
    #  id: cache-bazel
    #  uses: actions/cache@v3
    #  with:
    #    path: ~/.cache/bazel
    #    key: ${{ runner.os }}-bazel-20210105-${{ secrets.CACHE_VERSION }}

    #- name: Bazel Cache Not Found
    #  if: steps.cache-bazel.outputs.cache-hit != 'true'
    #  run: |
    #    echo "No cache found."
    #- name: Bazel Cache Found
    #  if: steps.cache-bazel.outputs.cache-hit == 'true'
    #  run: |
    #    echo -n "Cache found. Cache size: "
    #    du -sh ~/.cache/bazel
    #    echo "If the cache seems broken, update the CACHE_VERSION secret in"
    #    echo "https://github.com/googleapis/gapic-generator-php/settings/secrets/actions"
    #    echo "(use any random string, any GUID will work)"
    #    echo "and it will start over with a clean cache."
    #    echo "The old one will disappear after 7 days."

    - name: Show bazel version
      run: |
        cd bazel_example;
        bazelisk --version

    - name: Build example package; all targets
      run: |
        cd bazel_example;
        bazelisk build ... --verbose_failures


    - name: Extract Bazel package output
      run: |
        cd bazel_example;
        tar -xf ./bazel-bin/example_php_pkg.tar.gz

    # grep returns 1 if no matches are found; and 0 if >0 matches are found.
    - name: Verify grpc_service_config.json was honoured
      run: |
        grep '"timeout_millis": 942000' ./bazel_example/example_php_pkg/src/resources/example_client_config.json

    - name: Verify gapic.yaml was honoured
      run: |
        grep "'initialPollDelayMillis' => '42042'" ./bazel_example/example_php_pkg/src/resources/example_descriptor_config.php

    - name: Integration Tests
      run: |
        # Clear the cached files. Remove this workaround when the Bazel build is fixed.
        rm -rf ~/.cache/bazel/*/*/*/gapic_generator_php/bazel-out/host/bin/rules_php_gapic/*
        bazelisk --batch test tests/Integration:asset \
            tests/Integration:compute_small \
            tests/Integration:container \
            tests/Integration:dataproc \
            tests/Integration:functions \
            tests/Integration:kms \
            tests/Integration:iam \
            tests/Integration:logging \
            tests/Integration:redis \
            tests/Integration:retail \
            tests/Integration:speech \
            tests/Integration:securitycenter \
            tests/Integration:talent \
            tests/Integration:videointelligence --noshow_progress --cache_test_results=no

    - uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: test-artifacts
        path: ~/.cache/bazel/*/*/*/gapic_generator_php/bazel-out/*/testlogs/*
        retention-days: 5
